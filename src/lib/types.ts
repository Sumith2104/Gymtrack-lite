
import type { LucideIcon } from 'lucide-react';

export type MembershipStatus = 'active' | 'expired'; // Defines what's stored in the DB

// This can be used for suggested plan names, but actual plan names will be strings.
export type MembershipType = 'Basic' | 'Premium' | 'Annual' | 'Monthly' | '6-Month' | 'Class Pass' | 'Other';

// Interface for plans fetched from the database
export interface FetchedMembershipPlan {
  uuid: string; // This is plans.id (uuid) - the primary key
  planIdText: string | null; // This is plans.plan_id (text, e.g., BAS0599) - user-defined identifier
  name: string; // This is plans.plan_name (e.g., "Basic") - Changed from MembershipType to string
  price: number;
  durationMonths: number | null;
}

export interface Member {
  id: string; // uuid - typically generated by DB (members.id)
  gymId: string; // uuid, FK to gyms.id - from localStorage or context (members.gym_id)
  planId?: string | null; // uuid, FK to plans.id (uuid) - Stores FetchedMembershipPlan.uuid (members.plan_id)
  memberId: string; // User-defined member identifier (e.g., MBR001) (members.member_id)
  name: string; // members.name
  email: string; // members.email (marked as required in schema, making optional here needs care)
  membershipStatus: MembershipStatus; // Stored DB status: 'active' or 'expired'
  createdAt: string; // timestamptz (members.created_at)
  age: number | null; // members.age
  phoneNumber: string | null; // members.phone_number
  joinDate: string | null; // timestamptz - should default to today on add (members.join_date)
  expiryDate: string | null; // timestamptz - calculated based on plan (members.expiry_date)
  membershipType?: string | null; // User-facing plan name, e.g., "Basic" (derived from plans.plan_name via planId) - Changed from MembershipType | null
  planPrice?: number | null; // Price of the current plan (derived from plans.price via planId)
}

export interface Announcement {
  id: string; // uuid (announcements.id)
  gymId: string; // uuid, FK to gyms.id (announcements.gym_id) - This is the UUID
  formattedGymId: string; // text (announcements.formatted_gym_id) - This is the user-friendly ID like UOFI7OIB
  title: string; // announcements.title
  content: string; // announcements.content
  createdAt: string; // timestamptz (announcements.created_at)
}

export interface Gym {
  id: string; // uuid
  name: string;
  ownerEmail: string;
  ownerUserId?: string | null;
  formattedGymId: string;
  createdAt: string; // timestamptz
  status: string;
}

export interface Plan { // This is the DB schema type, used internally by Supabase client
  id: string // uuid
  plan_name: string
  price: number // numeric
  duration_months: number | null // int4
  is_active: boolean // bool
  plan_id: string | null // text, User-defined plan identifier
}


export interface CheckIn { // This is the raw DB record type for check_ins table
  id: string; // uuid
  gym_id: string; // uuid, FK to gyms.id
  member_table_id: string; // uuid, FK to members.id
  check_in_time: string; // timestamptz
  check_out_time?: string | null; // timestamptz
  created_at: string; // timestamptz
}

// Type for displaying formatted check-in information in the UI
export interface FormattedCheckIn {
  checkInRecordId: string; // The actual UUID of the check_in record from check_ins table
  memberTableId: string; // The actual UUID of the member from members table
  memberName: string;
  memberId: string; // The user-facing MBR001 style ID
  checkInTime: Date; // Use Date object for easier manipulation client-side
  checkOutTime: Date | null; // New field for check_out_time
  createdAt: Date; // New field for when the check_in record was created
  gymName: string; // Name of the gym where check-in occurred
}


export interface SuperAdmin {
  id: string; // uuid
  email: string;
  passwordHash: string;
  createdAt: string; // timestamptz
  updatedAt?: string | null; // timestamptz
}


// For chart data
export interface DailyCheckIns {
  date: string; // Formatted date string (e.g., 'Mon', 'MMM dd')
  count: number;
}

export interface OccupancyData {
  time: string;
  count: number;
}

// Attendance summary for a member
export interface AttendanceSummary {
    totalCheckIns: number;
    lastCheckInTime: Date | null;
    recentCheckIns: Date[]; // List of last 5 check-in dates/times
}

// Used for mapping Supabase member row with plan details
export interface MemberWithPlanDetails extends Omit<Member, 'membershipType' | 'planPrice'> {
  plans: {
    plan_name: string; 
    price: number;
    duration_months: number | null;
  } | null;
}

// UI Display Status type, derived from MembershipStatus and expiryDate
export type EffectiveMembershipStatus = 'active' | 'expiring soon' | 'expired';

export type MessageSenderType = 'admin' | 'member';
export type MessageReceiverType = 'admin' | 'member';

export interface Message {
  id: string; // uuid
  gymId: string; // uuid, FK to gyms.id
  formattedGymId?: string; // The user-friendly formatted ID of the gym
  senderId: string; // TEXT (can be formatted_gym_id for admin or member's UUID for member)
  receiverId: string; // TEXT (can be formatted_gym_id for admin or member's UUID for member)
  senderType: MessageSenderType;
  receiverType: MessageReceiverType;
  content: string;
  createdAt: string; // timestamptz
  readAt?: string | null; // timestamptz
}

export interface NavItem {
  href: string;
  icon: LucideIcon;
  label: string;
  external?: boolean;
  action?: 'logout';
}
