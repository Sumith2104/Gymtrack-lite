
// src/lib/database.types.ts
// This file is typically auto-generated by `supabase gen types typescript > path/to/types.ts`
// For now, we'll create a minimal version based on the schema provided by the user.

export type Json =
  | string
  | number
  | boolean
  | null
  | { [key: string]: Json | undefined }
  | Json[]

export interface Database {
  public: {
    Tables: {
      gyms: {
        Row: {
          id: string // uuid
          name: string
          owner_email: string
          owner_user_id: string | null // uuid, foreign key to auth.users.id
          formatted_gym_id: string // text, unique
          created_at: string // timestamp with time zone
          status: string // text, e.g., 'active', 'inactive'
        }
        Insert: {
          id?: string
          name: string
          owner_email: string
          owner_user_id?: string | null
          formatted_gym_id: string
          created_at?: string
          status?: string
        }
        Update: {
          id?: string
          name?: string
          owner_email?: string
          owner_user_id?: string | null
          formatted_gym_id?: string
          created_at?: string
          status?: string
        }
        Relationships: [
          {
            foreignKeyName: "gyms_owner_user_id_fkey"
            columns: ["owner_user_id"]
            referencedRelation: "users" // Supabase auth users table
            referencedColumns: ["id"]
          }
        ]
      }
      plans: {
        Row: {
          id: string // uuid
          plan_name: string
          price: number // numeric
          duration_months: number | null // int4
          is_active: boolean // bool
          plan_id: string | null // text, User-defined plan identifier
        }
        Insert: {
          id?: string
          plan_name: string
          price: number
          duration_months?: number | null
          is_active?: boolean
          plan_id?: string | null
        }
        Update: {
          id?: string
          plan_name?: string
          price?: number
          duration_months?: number | null
          is_active?: boolean
          plan_id?: string | null
        }
        Relationships: []
      }
      members: {
        Row: {
          id: string // uuid
          gym_id: string // uuid, foreign key to gyms.id
          plan_id: string | null // uuid, foreign key to plans.id
          member_id: string // User-defined member ID
          name: string
          email: string
          membership_status: string // e.g., 'active', 'inactive', 'expired', 'pending'
          created_at: string // timestamp with time zone
          age: number | null // int4
          phone_number: string | null // text
          join_date: string | null // timestamp with time zone
          expiry_date: string | null // timestamp with time zone
          membership_type: string | null // text
        }
        Insert: {
          id?: string
          gym_id: string
          plan_id?: string | null
          member_id: string
          name: string
          email: string
          membership_status?: string
          created_at?: string
          age?: number | null
          phone_number?: string | null
          join_date?: string | null
          expiry_date?: string | null
          membership_type?: string | null
        }
        Update: {
          id?: string
          gym_id?: string
          plan_id?: string | null
          member_id?: string
          name?: string
          email?: string
          membership_status?: string
          created_at?: string
          age?: number | null
          phone_number?: string | null
          join_date?: string | null
          expiry_date?: string | null
          membership_type?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "members_gym_id_fkey"
            columns: ["gym_id"]
            referencedRelation: "gyms"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "members_plan_id_fkey"
            columns: ["plan_id"]
            referencedRelation: "plans"
            referencedColumns: ["id"]
          }
        ]
      }
      check_ins: { // Renamed from check_in_records
        Row: {
          id: string // uuid
          gym_id: string // uuid, foreign key to gyms.id
          member_table_id: string // uuid, foreign key to members.id
          check_in_time: string // timestamp with time zone
          check_out_time: string | null // timestamp with time zone
          created_at: string // timestamp with time zone
        }
        Insert: {
          id?: string
          gym_id: string
          member_table_id: string
          check_in_time?: string
          check_out_time?: string | null
          created_at?: string
        }
        Update: {
          id?: string
          gym_id?: string
          member_table_id?: string
          check_in_time?: string
          check_out_time?: string | null
          created_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "check_ins_gym_id_fkey" // Updated relationship name
            columns: ["gym_id"]
            referencedRelation: "gyms"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "check_ins_member_table_id_fkey" // Updated relationship name
            columns: ["member_table_id"]
            referencedRelation: "members"
            referencedColumns: ["id"]
          }
        ]
      }
      announcements: {
        Row: {
          id: string // uuid
          gym_id: string // uuid, foreign key to gyms.id
          title: string // text
          content: string // text
          created_at: string // timestamp with time zone
        }
        Insert: {
          id?: string
          gym_id: string
          title: string
          content: string
          created_at?: string
        }
        Update: {
          id?: string
          gym_id?: string
          title?: string
          content?: string
          created_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "announcements_gym_id_fkey"
            columns: ["gym_id"]
            referencedRelation: "gyms"
            referencedColumns: ["id"]
          }
        ]
      }
      super_admins: {
        Row: {
          id: string // uuid
          email: string // text, unique
          password_hash: string // text
          created_at: string // timestamp with time zone
          updated_at: string | null // timestamp with time zone
        }
        Insert: {
          id?: string
          email: string
          password_hash: string
          created_at?: string
          updated_at?: string | null
        }
        Update: {
          id?: string
          email?: string
          password_hash?: string
          created_at?: string
          updated_at?: string | null
        }
        Relationships: []
      }
    }
    Views: {
      [_ in never]: never
    }
    Functions: {
      [_ in never]: never
    }
    Enums: {
      [_ in never]: never
    }
    CompositeTypes: {
      [_ in never]: never
    }
  }
}
